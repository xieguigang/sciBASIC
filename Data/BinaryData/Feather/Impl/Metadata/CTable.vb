' automatically generated by the FlatBuffers compiler, do not modify


Imports FlatBuffers
Imports System

Namespace Impl.FbsMetadata

    Friend Class CTable
        Implements IFlatbufferObject
        Private __p As Table = New Table()
        Public ReadOnly Property ByteBuffer As ByteBuffer Implements IFlatbufferObject.ByteBuffer
            Get
                Return __p.bb
            End Get
        End Property
        Public Shared Function GetRootAsCTable(_bb As ByteBuffer) As CTable
            Return GetRootAsCTable(_bb, New CTable())
        End Function
        Public Shared Function GetRootAsCTable(_bb As ByteBuffer, obj As CTable) As CTable
            Return obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)
        End Function
        Public Sub __init(_i As Integer, _bb As ByteBuffer) Implements IFlatbufferObject.__init
            __p.bb_pos = _i
            __p.bb = _bb
        End Sub
        Public Function __assign(_i As Integer, _bb As ByteBuffer) As CTable
            __init(_i, _bb)
            Return Me
        End Function

        ''' Some text (or a name) metadata about what the file is, optional
        Public ReadOnly Property Description As String
            Get
                Dim o = __p.__offset(4)
                Return If(o <> 0, __p.__string(o + __p.bb_pos), Nothing)
            End Get
        End Property
        Public Function GetDescriptionBytes() As ArraySegment(Of Byte)?
            Return __p.__vector_as_arraysegment(4)
        End Function
        Public ReadOnly Property NumRows As Long
            Get
                Dim o = __p.__offset(6)
                Return If(o <> 0, __p.bb.GetLong(o + __p.bb_pos), 0)
            End Get
        End Property
        Public Function Columns(j As Integer) As Column
            Dim o = __p.__offset(8)
            Return If(o <> 0, CType((New Column()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb), Column), Nothing)
        End Function
        Public ReadOnly Property ColumnsLength As Integer
            Get
                Dim o = __p.__offset(8)
                Return If(o <> 0, __p.__vector_len(o), 0)
            End Get
        End Property
        ''' Version number of the Feather format
        Public ReadOnly Property Version As Integer
            Get
                Dim o = __p.__offset(10)
                Return If(o <> 0, __p.bb.GetInt(o + __p.bb_pos), 0)
            End Get
        End Property
        ''' Table metadata (likely JSON), not yet used
        Public ReadOnly Property Metadata As String
            Get
                Dim o = __p.__offset(12)
                Return If(o <> 0, __p.__string(o + __p.bb_pos), Nothing)
            End Get
        End Property
        Public Function GetMetadataBytes() As ArraySegment(Of Byte)?
            Return __p.__vector_as_arraysegment(12)
        End Function

        Public Shared Function CreateCTable(builder As FlatBufferBuilder, Optional descriptionOffset As StringOffset = Nothing, Optional num_rows As Long = 0, Optional columnsOffset As VectorOffset = Nothing, Optional version As Integer = 0, Optional metadataOffset As StringOffset = Nothing) As Offset(Of CTable)
            builder.StartObject(5)
            AddNumRows(builder, num_rows)
            AddMetadata(builder, metadataOffset)
            AddVersion(builder, version)
            AddColumns(builder, columnsOffset)
            AddDescription(builder, descriptionOffset)
            Return EndCTable(builder)
        End Function

        Public Shared Sub StartCTable(builder As FlatBufferBuilder)
            builder.StartObject(5)
        End Sub
        Public Shared Sub AddDescription(builder As FlatBufferBuilder, descriptionOffset As StringOffset)
            builder.AddOffset(0, descriptionOffset.Value, 0)
        End Sub
        Public Shared Sub AddNumRows(builder As FlatBufferBuilder, numRows As Long)
            builder.AddLong(1, numRows, 0)
        End Sub
        Public Shared Sub AddColumns(builder As FlatBufferBuilder, columnsOffset As VectorOffset)
            builder.AddOffset(2, columnsOffset.Value, 0)
        End Sub
        Public Shared Function CreateColumnsVector(builder As FlatBufferBuilder, data As Offset(Of Column)()) As VectorOffset
            builder.StartVector(4, data.Length, 4)

            For i = data.Length - 1 To 0 Step -1
                builder.AddOffset(data(i).Value)
            Next

            Return builder.EndVector()
        End Function
        Public Shared Sub StartColumnsVector(builder As FlatBufferBuilder, numElems As Integer)
            builder.StartVector(4, numElems, 4)
        End Sub
        Public Shared Sub AddVersion(builder As FlatBufferBuilder, version As Integer)
            builder.AddInt(3, version, 0)
        End Sub
        Public Shared Sub AddMetadata(builder As FlatBufferBuilder, metadataOffset As StringOffset)
            builder.AddOffset(4, metadataOffset.Value, 0)
        End Sub
        Public Shared Function EndCTable(builder As FlatBufferBuilder) As Offset(Of CTable)
            Dim o As Integer = builder.EndObject()
            Return New Offset(Of CTable)(o)
        End Function
        Public Shared Sub FinishCTableBuffer(builder As FlatBufferBuilder, offset As Offset(Of CTable))
            builder.Finish(offset.Value)
        End Sub
    End Class


End Namespace

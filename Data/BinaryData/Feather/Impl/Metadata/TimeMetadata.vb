#Region "Microsoft.VisualBasic::cf3bdc134a87c1c61a970f22ed0ddd05, Data\BinaryData\Feather\Impl\Metadata\TimeMetadata.vb"

    ' Author:
    ' 
    '       asuka (amethyst.asuka@gcmodeller.org)
    '       xie (genetics@smrucc.org)
    '       xieguigang (xie.guigang@live.com)
    ' 
    ' Copyright (c) 2018 GPL3 Licensed
    ' 
    ' 
    ' GNU GENERAL PUBLIC LICENSE (GPL3)
    ' 
    ' 
    ' This program is free software: you can redistribute it and/or modify
    ' it under the terms of the GNU General Public License as published by
    ' the Free Software Foundation, either version 3 of the License, or
    ' (at your option) any later version.
    ' 
    ' This program is distributed in the hope that it will be useful,
    ' but WITHOUT ANY WARRANTY; without even the implied warranty of
    ' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    ' GNU General Public License for more details.
    ' 
    ' You should have received a copy of the GNU General Public License
    ' along with this program. If not, see <http://www.gnu.org/licenses/>.



    ' /********************************************************************************/

    ' Summaries:


    ' Code Statistics:

    '   Total Lines: 56
    '    Code Lines: 47
    ' Comment Lines: 1
    '   Blank Lines: 8
    '     File Size: 2.28 KB


    '     Class TimeMetadata
    ' 
    '         Properties: ByteBuffer, Unit
    ' 
    '         Function: __assign, CreateTimeMetadata, EndTimeMetadata, (+2 Overloads) GetRootAsTimeMetadata
    ' 
    '         Sub: __init, AddUnit, StartTimeMetadata
    ' 
    ' 
    ' /********************************************************************************/

#End Region

' automatically generated by the FlatBuffers compiler, do not modify

Imports Microsoft.VisualBasic.DataStorage.FeatherFormat.FlatBuffers

Namespace Impl.FbsMetadata

    Friend Class TimeMetadata
        Implements IFlatbufferObject
        Private __p As Table = New Table()
        Public ReadOnly Property ByteBuffer As ByteBuffer Implements IFlatbufferObject.ByteBuffer
            Get
                Return __p.bb
            End Get
        End Property
        Public Shared Function GetRootAsTimeMetadata(_bb As ByteBuffer) As TimeMetadata
            Return GetRootAsTimeMetadata(_bb, New TimeMetadata())
        End Function
        Public Shared Function GetRootAsTimeMetadata(_bb As ByteBuffer, obj As TimeMetadata) As TimeMetadata
            Return obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)
        End Function
        Public Sub __init(_i As Integer, _bb As ByteBuffer) Implements IFlatbufferObject.__init
            __p.bb_pos = _i
            __p.bb = _bb
        End Sub
        Public Function __assign(_i As Integer, _bb As ByteBuffer) As TimeMetadata
            __init(_i, _bb)
            Return Me
        End Function

        Public ReadOnly Property Unit As TimeUnit
            Get
                Dim o = __p.__offset(4)
                Return If(o <> 0, CType(__p.bb.GetSbyte(o + __p.bb_pos), TimeUnit), TimeUnit.SECOND)
            End Get
        End Property

        Public Shared Function CreateTimeMetadata(builder As FlatBufferBuilder, Optional unit As TimeUnit = TimeUnit.SECOND) As Offset(Of TimeMetadata)
            builder.StartObject(1)
            AddUnit(builder, unit)
            Return EndTimeMetadata(builder)
        End Function

        Public Shared Sub StartTimeMetadata(builder As FlatBufferBuilder)
            builder.StartObject(1)
        End Sub
        Public Shared Sub AddUnit(builder As FlatBufferBuilder, unit As TimeUnit)
            builder.AddSbyte(0, unit, 0)
        End Sub
        Public Shared Function EndTimeMetadata(builder As FlatBufferBuilder) As Offset(Of TimeMetadata)
            Dim o As Integer = builder.EndObject()
            Return New Offset(Of TimeMetadata)(o)
        End Function
    End Class


End Namespace


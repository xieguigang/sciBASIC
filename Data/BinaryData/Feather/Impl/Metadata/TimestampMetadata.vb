#Region "Microsoft.VisualBasic::20eff7b09e7e9a4d9e1c2a11060d49d4, Data\BinaryData\Feather\Impl\Metadata\TimestampMetadata.vb"

    ' Author:
    ' 
    '       asuka (amethyst.asuka@gcmodeller.org)
    '       xie (genetics@smrucc.org)
    '       xieguigang (xie.guigang@live.com)
    ' 
    ' Copyright (c) 2018 GPL3 Licensed
    ' 
    ' 
    ' GNU GENERAL PUBLIC LICENSE (GPL3)
    ' 
    ' 
    ' This program is free software: you can redistribute it and/or modify
    ' it under the terms of the GNU General Public License as published by
    ' the Free Software Foundation, either version 3 of the License, or
    ' (at your option) any later version.
    ' 
    ' This program is distributed in the hope that it will be useful,
    ' but WITHOUT ANY WARRANTY; without even the implied warranty of
    ' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    ' GNU General Public License for more details.
    ' 
    ' You should have received a copy of the GNU General Public License
    ' along with this program. If not, see <http://www.gnu.org/licenses/>.



    ' /********************************************************************************/

    ' Summaries:


    ' Code Statistics:

    '   Total Lines: 72
    '    Code Lines: 60 (83.33%)
    ' Comment Lines: 3 (4.17%)
    '    - Xml Docs: 66.67%
    ' 
    '   Blank Lines: 9 (12.50%)
    '     File Size: 3.13 KB


    '     Class TimestampMetadata
    ' 
    '         Properties: ByteBuffer, Timezone, Unit
    ' 
    '         Function: __assign, CreateTimestampMetadata, EndTimestampMetadata, (+2 Overloads) GetRootAsTimestampMetadata, GetTimezoneBytes
    ' 
    '         Sub: __init, AddTimezone, AddUnit, StartTimestampMetadata
    ' 
    ' 
    ' /********************************************************************************/

#End Region

' automatically generated by the FlatBuffers compiler, do not modify


Imports Microsoft.VisualBasic.DataStorage.FeatherFormat.FlatBuffers

Namespace Impl.FbsMetadata

    Friend Class TimestampMetadata
        Implements IFlatbufferObject
        Private __p As Table = New Table()
        Public ReadOnly Property ByteBuffer As ByteBuffer Implements IFlatbufferObject.ByteBuffer
            Get
                Return __p.bb
            End Get
        End Property
        Public Shared Function GetRootAsTimestampMetadata(_bb As ByteBuffer) As TimestampMetadata
            Return GetRootAsTimestampMetadata(_bb, New TimestampMetadata())
        End Function
        Public Shared Function GetRootAsTimestampMetadata(_bb As ByteBuffer, obj As TimestampMetadata) As TimestampMetadata
            Return obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)
        End Function
        Public Sub __init(_i As Integer, _bb As ByteBuffer) Implements IFlatbufferObject.__init
            __p.bb_pos = _i
            __p.bb = _bb
        End Sub
        Public Function __assign(_i As Integer, _bb As ByteBuffer) As TimestampMetadata
            __init(_i, _bb)
            Return Me
        End Function

        Public ReadOnly Property Unit As TimeUnit
            Get
                Dim o = __p.__offset(4)
                Return If(o <> 0, CType(__p.bb.GetSbyte(o + __p.bb_pos), TimeUnit), TimeUnit.SECOND)
            End Get
        End Property
        ''' Timestamp data is assumed to be UTC, but the time zone is stored here for
        ''' presentation as localized
        Public ReadOnly Property Timezone As String
            Get
                Dim o = __p.__offset(6)
                Return If(o <> 0, __p.__string(o + __p.bb_pos), Nothing)
            End Get
        End Property
        Public Function GetTimezoneBytes() As ArraySegment(Of Byte)?
            Return __p.__vector_as_arraysegment(6)
        End Function

        Public Shared Function CreateTimestampMetadata(builder As FlatBufferBuilder, Optional unit As TimeUnit = TimeUnit.SECOND, Optional timezoneOffset As StringOffset = Nothing) As Offset(Of TimestampMetadata)
            builder.StartObject(2)
            AddTimezone(builder, timezoneOffset)
            AddUnit(builder, unit)
            Return EndTimestampMetadata(builder)
        End Function

        Public Shared Sub StartTimestampMetadata(builder As FlatBufferBuilder)
            builder.StartObject(2)
        End Sub
        Public Shared Sub AddUnit(builder As FlatBufferBuilder, unit As TimeUnit)
            builder.AddSbyte(0, unit, 0)
        End Sub
        Public Shared Sub AddTimezone(builder As FlatBufferBuilder, timezoneOffset As StringOffset)
            builder.AddOffset(1, timezoneOffset.Value, 0)
        End Sub
        Public Shared Function EndTimestampMetadata(builder As FlatBufferBuilder) As Offset(Of TimestampMetadata)
            Dim o As Integer = builder.EndObject()
            Return New Offset(Of TimestampMetadata)(o)
        End Function
    End Class


End Namespace

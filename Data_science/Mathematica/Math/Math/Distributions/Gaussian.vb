#Region "Microsoft.VisualBasic::21334a0ecfa954efae5389e1ff556d20, Data_science\Mathematica\Math\Math\Distributions\Gaussian.vb"

    ' Author:
    ' 
    '       asuka (amethyst.asuka@gcmodeller.org)
    '       xie (genetics@smrucc.org)
    '       xieguigang (xie.guigang@live.com)
    ' 
    ' Copyright (c) 2018 GPL3 Licensed
    ' 
    ' 
    ' GNU GENERAL PUBLIC LICENSE (GPL3)
    ' 
    ' 
    ' This program is free software: you can redistribute it and/or modify
    ' it under the terms of the GNU General Public License as published by
    ' the Free Software Foundation, either version 3 of the License, or
    ' (at your option) any later version.
    ' 
    ' This program is distributed in the hope that it will be useful,
    ' but WITHOUT ANY WARRANTY; without even the implied warranty of
    ' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    ' GNU General Public License for more details.
    ' 
    ' You should have received a copy of the GNU General Public License
    ' along with this program. If not, see <http://www.gnu.org/licenses/>.



    ' /********************************************************************************/

    ' Summaries:


    ' Code Statistics:

    '   Total Lines: 74
    '    Code Lines: 39 (52.70%)
    ' Comment Lines: 27 (36.49%)
    '    - Xml Docs: 77.78%
    ' 
    '   Blank Lines: 8 (10.81%)
    '     File Size: 3.24 KB


    '     Module Gaussian
    ' 
    '         Function: (+2 Overloads) Gaussian, GaussianDistribution, (+2 Overloads) rnorm, StandadizedGaussianFunction
    ' 
    ' 
    ' /********************************************************************************/

#End Region

Imports System.Runtime.CompilerServices
Imports Microsoft.VisualBasic.Math.LinearAlgebra
Imports rand = Microsoft.VisualBasic.Math.RandomExtensions
Imports std = System.Math

Namespace Distributions

    ''' <summary>
    ''' ##### Gaussian function
    ''' 
    ''' https://en.wikipedia.org/wiki/Gaussian_function
    ''' </summary>
    Public Module Gaussian

        Public Function GaussianDistribution(x As Single, sigma As Single) As Single
            ' 计算高斯分布函数 (参考: https://en.wikipedia.org/wiki/Gaussian_blur)
            ' 公式: (1 / √(2πσ²)) * e^(-(x²)/(2σ²))
            Return CSng(1 / std.Sqrt(2 * std.PI * sigma * sigma) * std.Exp(-(x * x) / (2 * sigma * sigma)))
        End Function

        ''' <summary>
        ''' 
        ''' </summary>
        ''' <param name="x"></param>
        ''' <param name="A">is the height of the curve's peak</param>
        ''' <param name="mu">is the position of the center of the peak</param>
        ''' <param name="sigma">(the standard deviation, sometimes called the Gaussian RMS width) 
        ''' controls the width of the "bell"</param>
        ''' <returns></returns>
        Public Function Gaussian(x#, A#, mu#, sigma#) As Double
            Dim p# = ((x - mu) ^ 2) / (2 * (sigma ^ 2))
            Dim fx# = A * std.Exp(-p)
            Return fx
        End Function

        Public Function Gaussian(x As IEnumerable(Of Double), A#, mu#, sigma#) As Double()
            Dim offset = SIMD.Subtract.f64_op_subtract_f64_scalar(x.ToArray, mu)
            Dim num = (2 * (sigma ^ 2))
            Dim pow = SIMD.Exponent.f64_op_exponent_f64_scalar(offset, 2)
            Dim p = SIMD.Divide.f64_op_divide_f64_scalar(pow, num)
            Dim exp = SIMD.Exponent.f64_exp(SIMD.Subtract.f64_scalar_op_subtract_f64(0, p))
            Dim gauss = SIMD.Multiply.f64_scalar_op_multiply_f64(A, exp)
            Return gauss
        End Function

        Public Function StandadizedGaussianFunction(diff As Double, devi As Double) As Double
            ' exp(-(diff/devi)^2 / 2)
            Dim result = std.Exp(-0.5 * std.Pow(diff / devi, 2))
            Return result
        End Function

        <MethodImpl(MethodImplOptions.AggressiveInlining)>
        Public Function rnorm(x As Vector, m As Double, sd As Double) As Vector
            Return New Vector(x.Select(Function(n) pnorm.ProbabilityDensity(n, m, sd)))
        End Function

        ''' <summary>
        ''' Returns a vector with specific parameters normal distribution of length n elements.
        ''' Distribution data was generated by the n length random seeds as the normal distribution 
        ''' inputs.
        ''' </summary>
        ''' <param name="n"></param>
        ''' <param name="m"></param>
        ''' <param name="sd"></param>
        ''' <returns></returns>
        ''' 
        <MethodImpl(MethodImplOptions.AggressiveInlining)>
        Public Function rnorm(n As Integer, m As Double, sd As Double) As Vector
            Return Enumerable.Range(0, n) _
                .Select(Function(x) rand.NextGaussian(m, sd)) _
                .AsVector
        End Function
    End Module
End Namespace
